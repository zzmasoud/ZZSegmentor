// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"zzsegmentor::ZZSegmentorPackageTests::ProductTarget" /* ZZSegmentorPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_44 /* Build configuration list for PBXAggregateTarget "ZZSegmentorPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_47 /* PBXTargetDependency */,
			);
			name = ZZSegmentorPackageTests;
			productName = ZZSegmentorPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_32 /* ZZSItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* ZZSItem.swift */; };
		OBJ_33 /* ZZSTimeframe.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* ZZSTimeframe.swift */; };
		OBJ_34 /* ZZSegment.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* ZZSegment.swift */; };
		OBJ_35 /* ZZSegmentor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* ZZSegmentor.swift */; };
		OBJ_42 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_53 /* Date+String.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Date+String.swift */; };
		OBJ_54 /* Int+TimeInterval.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Int+TimeInterval.swift */; };
		OBJ_55 /* ZZSItemTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* ZZSItemTests.swift */; };
		OBJ_56 /* ZZSTimeframeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* ZZSTimeframeTests.swift */; };
		OBJ_57 /* ZZSegmentTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* ZZSegmentTests.swift */; };
		OBJ_58 /* ZZSegmentorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* ZZSegmentorTests.swift */; };
		OBJ_60 /* ZZSegmentor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "zzsegmentor::ZZSegmentor::Product" /* ZZSegmentor.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		047DE9E92924EC660069346C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "zzsegmentor::ZZSegmentor";
			remoteInfo = ZZSegmentor;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_10 /* ZZSItem.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSItem.swift; sourceTree = "<group>"; };
		OBJ_11 /* ZZSTimeframe.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSTimeframe.swift; sourceTree = "<group>"; };
		OBJ_12 /* ZZSegment.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSegment.swift; sourceTree = "<group>"; };
		OBJ_13 /* ZZSegmentor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSegmentor.swift; sourceTree = "<group>"; };
		OBJ_17 /* Date+String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Date+String.swift"; sourceTree = "<group>"; };
		OBJ_18 /* Int+TimeInterval.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Int+TimeInterval.swift"; sourceTree = "<group>"; };
		OBJ_19 /* ZZSItemTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSItemTests.swift; sourceTree = "<group>"; };
		OBJ_20 /* ZZSTimeframeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSTimeframeTests.swift; sourceTree = "<group>"; };
		OBJ_21 /* ZZSegmentTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSegmentTests.swift; sourceTree = "<group>"; };
		OBJ_22 /* ZZSegmentorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZZSegmentorTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* ZZSegmentor.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ZZSegmentor.h; sourceTree = "<group>"; };
		"zzsegmentor::ZZSegmentor::Product" /* ZZSegmentor.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = ZZSegmentor.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"zzsegmentor::ZZSegmentorTests::Product" /* ZZSegmentorTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = ZZSegmentorTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_36 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_59 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_60 /* ZZSegmentor.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_14 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_15 /* ZZSegmentorTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_15 /* ZZSegmentorTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_16 /* Shared */,
				OBJ_19 /* ZZSItemTests.swift */,
				OBJ_20 /* ZZSTimeframeTests.swift */,
				OBJ_21 /* ZZSegmentTests.swift */,
				OBJ_22 /* ZZSegmentorTests.swift */,
			);
			name = ZZSegmentorTests;
			path = Tests/ZZSegmentorTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_16 /* Shared */ = {
			isa = PBXGroup;
			children = (
				OBJ_17 /* Date+String.swift */,
				OBJ_18 /* Int+TimeInterval.swift */,
			);
			path = Shared;
			sourceTree = "<group>";
		};
		OBJ_23 /* Products */ = {
			isa = PBXGroup;
			children = (
				"zzsegmentor::ZZSegmentor::Product" /* ZZSegmentor.framework */,
				"zzsegmentor::ZZSegmentorTests::Product" /* ZZSegmentorTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_14 /* Tests */,
				OBJ_23 /* Products */,
				OBJ_26 /* README.md */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* ZZSegmentor */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* ZZSegmentor */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* ZZSegmentor.h */,
				OBJ_10 /* ZZSItem.swift */,
				OBJ_11 /* ZZSTimeframe.swift */,
				OBJ_12 /* ZZSegment.swift */,
				OBJ_13 /* ZZSegmentor.swift */,
			);
			name = ZZSegmentor;
			path = Sources/ZZSegmentor;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"zzsegmentor::SwiftPMPackageDescription" /* ZZSegmentorPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_38 /* Build configuration list for PBXNativeTarget "ZZSegmentorPackageDescription" */;
			buildPhases = (
				OBJ_41 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ZZSegmentorPackageDescription;
			productName = ZZSegmentorPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"zzsegmentor::ZZSegmentor" /* ZZSegmentor */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_28 /* Build configuration list for PBXNativeTarget "ZZSegmentor" */;
			buildPhases = (
				OBJ_31 /* Sources */,
				OBJ_36 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ZZSegmentor;
			productName = ZZSegmentor;
			productReference = "zzsegmentor::ZZSegmentor::Product" /* ZZSegmentor.framework */;
			productType = "com.apple.product-type.framework";
		};
		"zzsegmentor::ZZSegmentorTests" /* ZZSegmentorTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_49 /* Build configuration list for PBXNativeTarget "ZZSegmentorTests" */;
			buildPhases = (
				OBJ_52 /* Sources */,
				OBJ_59 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_61 /* PBXTargetDependency */,
			);
			name = ZZSegmentorTests;
			productName = ZZSegmentorTests;
			productReference = "zzsegmentor::ZZSegmentorTests::Product" /* ZZSegmentorTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "ZZSegmentor" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_23 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"zzsegmentor::ZZSegmentor" /* ZZSegmentor */,
				"zzsegmentor::SwiftPMPackageDescription" /* ZZSegmentorPackageDescription */,
				"zzsegmentor::ZZSegmentorPackageTests::ProductTarget" /* ZZSegmentorPackageTests */,
				"zzsegmentor::ZZSegmentorTests" /* ZZSegmentorTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_31 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_32 /* ZZSItem.swift in Sources */,
				OBJ_33 /* ZZSTimeframe.swift in Sources */,
				OBJ_34 /* ZZSegment.swift in Sources */,
				OBJ_35 /* ZZSegmentor.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_41 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_42 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_52 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_53 /* Date+String.swift in Sources */,
				OBJ_54 /* Int+TimeInterval.swift in Sources */,
				OBJ_55 /* ZZSItemTests.swift in Sources */,
				OBJ_56 /* ZZSTimeframeTests.swift in Sources */,
				OBJ_57 /* ZZSegmentTests.swift in Sources */,
				OBJ_58 /* ZZSegmentorTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_47 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "zzsegmentor::ZZSegmentorTests" /* ZZSegmentorTests */;
			targetProxy = "zzsegmentor::ZZSegmentorTests" /* ZZSegmentorTests */;
		};
		OBJ_61 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "zzsegmentor::ZZSegmentor" /* ZZSegmentor */;
			targetProxy = 047DE9E92924EC660069346C /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_29 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = ZZSegmentor.xcodeproj/ZZSegmentor_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = ZZSegmentor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "appletvos appletvsimulator driverkit iphoneos iphonesimulator macosx watchos watchsimulator";
				SUPPORTS_MACCATALYST = YES;
				SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = NO;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2,3,4";
				TARGET_NAME = ZZSegmentor;
				TVOS_DEPLOYMENT_TARGET = 11.0;
				WATCHOS_DEPLOYMENT_TARGET = 4.0;
			};
			name = Debug;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "$(AVAILABLE_PLATFORMS)";
				SUPPORTS_MACCATALYST = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_30 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = ZZSegmentor.xcodeproj/ZZSegmentor_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = ZZSegmentor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SUPPORTED_PLATFORMS = "appletvos appletvsimulator driverkit iphoneos iphonesimulator macosx watchos watchsimulator";
				SUPPORTS_MACCATALYST = YES;
				SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = NO;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2,3,4";
				TARGET_NAME = ZZSegmentor;
				TVOS_DEPLOYMENT_TARGET = 11.0;
				WATCHOS_DEPLOYMENT_TARGET = 4.0;
			};
			name = Release;
		};
		OBJ_39 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/ManifestAPI -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -package-description-version 5.7.0";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "$(AVAILABLE_PLATFORMS)";
				SUPPORTS_MACCATALYST = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_40 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/ManifestAPI -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -package-description-version 5.7.0";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_45 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_46 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_50 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = ZZSegmentor.xcodeproj/ZZSegmentorTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 14.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = ZZSegmentorTests;
				TVOS_DEPLOYMENT_TARGET = 14.0;
				WATCHOS_DEPLOYMENT_TARGET = 7.0;
			};
			name = Debug;
		};
		OBJ_51 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DRIVERKIT_DEPLOYMENT_TARGET = 19.0;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = ZZSegmentor.xcodeproj/ZZSegmentorTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 14.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = ZZSegmentorTests;
				TVOS_DEPLOYMENT_TARGET = 14.0;
				WATCHOS_DEPLOYMENT_TARGET = 7.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "ZZSegmentor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_28 /* Build configuration list for PBXNativeTarget "ZZSegmentor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_29 /* Debug */,
				OBJ_30 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_38 /* Build configuration list for PBXNativeTarget "ZZSegmentorPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_39 /* Debug */,
				OBJ_40 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_44 /* Build configuration list for PBXAggregateTarget "ZZSegmentorPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_45 /* Debug */,
				OBJ_46 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_49 /* Build configuration list for PBXNativeTarget "ZZSegmentorTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_50 /* Debug */,
				OBJ_51 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
